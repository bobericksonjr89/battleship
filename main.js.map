{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;AACA,gDAAgD,MAAM,aAAa,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE,aAAa,MAAM;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,EAAE,aAAa,EAAE;AAC9D;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,EAAE,aAAa,EAAE;AAC9D;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,EAAE,aAAa,EAAE;AAC7D;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,EAAE,aAAa,EAAE;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;AC1FA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;;;;;;;;;;;ACxDA,kBAAkB,mBAAO,CAAC,0CAAgB;AAC1C,aAAa,mBAAO,CAAC,gCAAW;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,iBAAiB,wBAAwB;;AAEzC,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;;;;;;;;;;ACvBA,eAAe,mBAAO,CAAC,oCAAa;AACpC,kBAAkB,mBAAO,CAAC,0CAAgB;AAC1C,aAAa,mBAAO,CAAC,gCAAW;AAChC,YAAY,mBAAO,CAAC,8BAAU;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW;AACX,CAAC;;AAED;;;;;;;UCpGA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://battleship/./src/DOM.js","webpack://battleship/./src/Gameboard.js","webpack://battleship/./src/Player.js","webpack://battleship/./src/Ship.js","webpack://battleship/./src/app.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/before-startup","webpack://battleship/webpack/startup","webpack://battleship/webpack/after-startup"],"sourcesContent":["const DOM = (() => {\n  // DOM capture\n  playerBoard = document.querySelector(\".player-info__board\");\n  gameBoard = document.querySelector(\".game-area__gameboard\");\n\n  function displayPlayerBoard() {\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        let playerSpace = document.createElement(\"div\");\n        playerSpace.classList.add(\"player-info__player-space\");\n        playerSpace.dataset.x = j;\n        playerSpace.dataset.y = i;\n        playerBoard.appendChild(playerSpace);\n      }\n    }\n  }\n\n  function displayGameBoard() {\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        let gameSpace = document.createElement(\"div\");\n        gameSpace.classList.add(\"game-area__gameboard-space\");\n        gameSpace.dataset.x = j;\n        gameSpace.dataset.y = i;\n        gameBoard.appendChild(gameSpace);\n      }\n    }\n  }\n\n  function colorPlayerSpace(boat, x, y, direction) {\n    let playerSpace;\n\n    for (let i = 0; i < boat.length; i++) {\n      if (direction === \"horizontal\") {\n        playerSpace = document.querySelector(\n          `.player-info__player-space[data-x='${x + i}'][data-y='${y}']`\n        );\n        playerSpace.classList.add(\"player-info__player-space--filled\");\n      }\n      if (direction === \"vertical\") {\n        playerSpace = document.querySelector(\n          `.player-info__player-space[data-x='${x}'][data-y='${y + i}']`\n        );\n        playerSpace.classList.add(\"player-info__player-space--filled\");\n      }\n    }\n  }\n\n  function displayHit(x, y) {\n    const space = document.querySelector(\n      `.game-area__gameboard-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"game-area__gameboard-space--hit\");\n  }\n\n  function displayMiss(x, y) {\n    const space = document.querySelector(\n      `.game-area__gameboard-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"game-area__gameboard-space--miss\");\n  }\n\n  function displayPlayerHit(x, y) {\n    const space = document.querySelector(\n      `.player-info__player-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"player-info__player-space--hit\");\n  }\n\n  function displayPlayerMiss(x, y) {\n    const space = document.querySelector(\n      `.player-info__player-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"player-info__player-space--miss\");\n  }\n\n  //gridDiv.appendChild(document.createElement(\"div\")).classList.add(\"grid-box\");\n\n  displayPlayerBoard();\n  displayGameBoard();\n\n  return {\n    colorPlayerSpace,\n    displayHit,\n    displayMiss,\n    displayPlayerHit,\n    displayPlayerMiss,\n  };\n})();\n\nmodule.exports = DOM;\n","const Gameboard = () => {\n  const board = [];\n  for (let i = 0; i < 10; i++) {\n    board[i] = [];\n  }\n\n  const ships = [];\n\n  const placeShip = (ship, x, y, direction) => {\n    const shipLength = ship.length;\n    if (direction === \"horizontal\") {\n      if (x + shipLength - 1 > 9) {\n        return false;\n      }\n      for (let i = 0; i < shipLength; i++) {\n        if (board[x + i][y]) {\n          return false;\n        }\n        board[x + i][y] = ship;\n      }\n      ships.push(ship);\n    }\n\n    if (direction === \"vertical\") {\n      if (y + shipLength - 1 > 9) {\n        return false;\n      }\n      for (let i = 0; i < shipLength; i++) {\n        if (board[x][y + i]) {\n          return false;\n        }\n        board[x][y + i] = ship;\n      }\n      ships.push(ship);\n    }\n    return true;\n  };\n\n  const recieveAttack = (x, y) => {\n    if (board[x][y]) {\n      board[x][y].hit();\n      return \"hit\";\n    }\n    if (!board[x][y]) {\n      board[x][y] = \"miss\";\n      return \"miss\";\n    }\n  };\n\n  const allSunk = () => {\n    return ships.every((ship) => ship.isSunk() === true);\n  };\n\n  return { placeShip, recieveAttack, allSunk, board };\n};\n\nmodule.exports = Gameboard;\n","const Gameboard = require(\"./Gameboard.js\");\nconst Ship = require(\"./Ship.js\");\n\nconst Player = () => {\n  const playerBoard = Gameboard();\n\n  const patrolBoat = Ship(2, \"Patrol Boat\");\n  const submarine = Ship(3, \"Submarine\");\n  const destroyer = Ship(3, \"Destroyer\");\n  const battleship = Ship(4, \"Battleship\");\n  const carrier = Ship(5, \"Carrier\");\n\n  const moves = [];\n\n  const attackBoard = (enemyBoard, x, y) => {\n    const result = enemyBoard.recieveAttack(x, y);\n    return result;\n  };\n\n  const generateCoordinates = () => {\n    let randomX;\n    let randomY;\n    do {\n      randomX = randomInt();\n      randomY = randomInt();\n    } while (moves.some((move) => move.x === randomX && move.y === randomY));\n    moves.push({ x: randomX, y: randomY });\n\n    return { x: randomX, y: randomY };\n    // get new coordinates if already fired\n    // do-while loop in game module\n  };\n\n  const randomInt = () => {\n    return Math.floor(\n      Math.random() * (Math.floor(9) - Math.ceil(0) + 1) + Math.ceil(0)\n    );\n  };\n\n  return {\n    playerBoard,\n    patrolBoat,\n    submarine,\n    destroyer,\n    battleship,\n    carrier,\n    attackBoard,\n    generateCoordinates,\n  };\n};\n\nmodule.exports = Player;\n","const Ship = (length, name) => {\n  let health = length;\n\n  const hit = () => {\n    if (!isSunk()) {\n      health--;\n      console.log(health);\n      return true;\n    }\n    return false;\n  };\n\n  const isSunk = () => {\n    if (health === 0) {\n      return true;\n    }\n    return false;\n  };\n  return { length, name, hit, isSunk };\n};\nmodule.exports = Ship;\n\n// hit returns true or false (false if already hit)\n// isSunk returns true or false;\n","const Player = require(\"./Player.js\");\nconst Gameboard = require(\"./Gameboard.js\");\nconst Ship = require(\"./Ship.js\");\nconst DOM = require(\"./DOM.js\");\n\nconst app = (() => {\n  // DOM Capture\n  const enemySpaces = document.querySelectorAll(\".game-area__gameboard-space\");\n\n  // Event Handlers\n  enemySpaces.forEach((space) => space.addEventListener(\"click\", attack));\n\n  // assign player1\n  const player1 = Player();\n  // assign player2\n  const player2 = Player();\n  // init turn variable\n  let turn = 1;\n  // player 1 places ships\n  // player 2 places ships\n  // (preselected for now...)\n  function placeShips() {\n    player1.playerBoard.placeShip(player1.patrolBoat, 2, 4, \"vertical\");\n    DOM.colorPlayerSpace(player1.patrolBoat, 2, 4, \"vertical\");\n    player1.playerBoard.placeShip(player1.submarine, 1, 0, \"horizontal\");\n    DOM.colorPlayerSpace(player1.submarine, 1, 0, \"horizontal\");\n    player1.playerBoard.placeShip(player1.destroyer, 8, 3, \"vertical\");\n    DOM.colorPlayerSpace(player1.destroyer, 8, 3, \"vertical\");\n    player1.playerBoard.placeShip(player1.battleship, 4, 4, \"vertical\");\n    DOM.colorPlayerSpace(player1.battleship, 4, 4, \"vertical\");\n    player1.playerBoard.placeShip(player1.carrier, 1, 2, \"horizontal\");\n    DOM.colorPlayerSpace(player1.carrier, 1, 2, \"horizontal\");\n\n    player2.playerBoard.placeShip(player2.patrolBoat, 0, 0, \"vertical\");\n    player2.playerBoard.placeShip(player2.submarine, 4, 7, \"vertical\");\n    player2.playerBoard.placeShip(player2.destroyer, 5, 1, \"horizontal\");\n    player2.playerBoard.placeShip(player2.battleship, 2, 2, \"vertical\");\n    player2.playerBoard.placeShip(player2.carrier, 5, 5, \"horizontal\");\n  }\n\n  // gameflow starts\n  function gameFlow() {\n    // turn++;\n    // odd turns are player 1\n    //DO WHILE??\n    if (turn % 2 === 1) {\n    }\n  }\n\n  function attack(e) {\n    if (turn % 2 !== 1) {\n      return;\n    }\n    const xCoord = e.target.dataset.x;\n    const yCoord = e.target.dataset.y;\n    const result = player1.attackBoard(player2.playerBoard, xCoord, yCoord);\n    if (result === \"hit\") {\n      DOM.displayHit(xCoord, yCoord);\n    }\n    if (result === \"miss\") {\n      DOM.displayMiss(xCoord, yCoord);\n    }\n    turn++;\n    setTimeout(AIMove, 500);\n  }\n\n  function AIMove() {\n    const AICoords = player2.generateCoordinates();\n    const AIResult = player2.attackBoard(\n      player1.playerBoard,\n      AICoords.x,\n      AICoords.y\n    );\n    if (AIResult === \"hit\") {\n      DOM.displayPlayerHit(AICoords.x, AICoords.y);\n    }\n    if (AIResult === \"miss\") {\n      DOM.displayPlayerMiss(AICoords.x, AICoords.y);\n    }\n    turn++;\n  }\n\n  // even turns are player 2\n  // 34 turns minimum before win condition could be met\n  // player selects space\n  // returns hit or miss\n  // DOM displays result\n  // \"sink ship\" if applicable\n  // DOM displays sunked ship\n  // if turn >= 34, check if game over\n  // if game over, display winner\n  // click to restart game\n  //  reset turns, reset players, place ships, start the flow again\n\n  placeShips();\n  gameFlow();\n\n  return { attack };\n})();\n\nmodule.exports = app;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/app.js\");\n",""],"names":[],"sourceRoot":""}