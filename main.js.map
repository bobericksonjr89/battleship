{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA,+CAA+C,EAAE,aAAa,EAAE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA,+CAA+C,MAAM,aAAa,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA,+CAA+C,EAAE,aAAa,MAAM;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA,+CAA+C,MAAM,aAAa,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA,+CAA+C,EAAE,aAAa,MAAM;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;AACA,gDAAgD,MAAM,aAAa,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA,gDAAgD,EAAE,aAAa,MAAM;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,EAAE,aAAa,EAAE;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,EAAE,aAAa,EAAE;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,EAAE,aAAa,EAAE;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,EAAE,aAAa,EAAE;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,QAAQ,aAAa,QAAQ;AAC5E;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;ACnQA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;;;;;;;;;;;ACpFA,kBAAkB,mBAAO,CAAC,0CAAgB;AAC1C,aAAa,mBAAO,CAAC,gCAAW;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,iBAAiB,YAAY;AAC7B,aAAa;AACb;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D,aAAa;AACb;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D,aAAa;AACb;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D,aAAa;AACb;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9NA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;;;;;;;;;;ACtBA,eAAe,mBAAO,CAAC,oCAAa;AACpC,YAAY,mBAAO,CAAC,8BAAU;AAC9B,QAAQ,eAAe,EAAE,mBAAO,CAAC,8BAAU;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B,wBAAwB,QAAQ;AAChC;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;UCxNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://battleship/./src/DOM.js","webpack://battleship/./src/Gameboard.js","webpack://battleship/./src/Player.js","webpack://battleship/./src/Ship.js","webpack://battleship/./src/app.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/before-startup","webpack://battleship/webpack/startup","webpack://battleship/webpack/after-startup"],"sourcesContent":["const DOM = (() => {\n  // DOM capture\n  const placeShips = document.querySelector(\".place-ships\");\n  const playerInfo = document.querySelector(\".player-info\");\n  const gameArea = document.querySelector(\".game-area\");\n  const placeBoard = document.querySelector(\".place-ships__board\");\n  const playerBoard = document.querySelector(\".player-info__board\");\n  const gameBoard = document.querySelector(\".game-area__gameboard\");\n  const message = document.querySelector(\".message-area__message\");\n  const playAgain = document.querySelector(\".message-area__button\");\n\n  function displayPlaceShipsBoard() {\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        let gameSpace = document.createElement(\"div\");\n        gameSpace.classList.add(\"place-ships__board-space\");\n        gameSpace.dataset.x = j;\n        gameSpace.dataset.y = i;\n        placeBoard.appendChild(gameSpace);\n      }\n    }\n  }\n\n  function displayPlayerBoard() {\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        let playerSpace = document.createElement(\"div\");\n        playerSpace.classList.add(\"player-info__player-space\");\n        playerSpace.dataset.x = j;\n        playerSpace.dataset.y = i;\n        playerBoard.appendChild(playerSpace);\n      }\n    }\n  }\n\n  function displayGameBoard() {\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        let gameSpace = document.createElement(\"div\");\n        gameSpace.classList.add(\"game-area__gameboard-space\");\n        gameSpace.dataset.x = j;\n        gameSpace.dataset.y = i;\n        gameBoard.appendChild(gameSpace);\n      }\n    }\n  }\n\n  function addDeactivatedClass(ships) {\n    ships.forEach((ship) => ship.classList.add(\"ship--deactivated\"));\n  }\n\n  function addActivatedClass(ship) {\n    ship.classList.add(\"ship--activated\");\n  }\n\n  function resetShipButtons(ships) {\n    ships.forEach((ship) =>\n      ship.classList.remove(\"ship--activated\", \"ship--deactivated\")\n    );\n  }\n\n  function clearFilledSpaces() {\n    let placeSpace;\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        placeSpace = document.querySelector(\n          `.place-ships__board-space[data-x='${j}'][data-y='${i}']`\n        );\n        placeSpace.classList.remove(\"place-ships__board-space--filled\");\n      }\n    }\n  }\n\n  function displayHover(ship, x, y, direction) {\n    let placeSpace;\n    x = parseInt(x);\n    y = parseInt(y);\n    clearFilledSpaces();\n\n    if (direction === \"horizontal\" && x + ship.length - 1 < 10) {\n      for (let i = 0; i < ship.length; i++) {\n        placeSpace = document.querySelector(\n          `.place-ships__board-space[data-x='${x + i}'][data-y='${y}']`\n        );\n        placeSpace.classList.add(\"place-ships__board-space--filled\");\n      }\n      return;\n    }\n    if (direction === \"vertical\" && y + ship.length - 1 < 10) {\n      for (let i = 0; i < ship.length; i++) {\n        placeSpace = document.querySelector(\n          `.place-ships__board-space[data-x='${x}'][data-y='${y + i}']`\n        );\n        placeSpace.classList.add(\"place-ships__board-space--filled\");\n      }\n    }\n  }\n\n  function savePlayerHover(ship, x, y, direction) {\n    let placeSpace;\n    x = parseInt(x);\n    y = parseInt(y);\n    clearFilledSpaces();\n\n    if (direction === \"horizontal\" && x + ship.length - 1 < 10) {\n      for (let i = 0; i < ship.length; i++) {\n        placeSpace = document.querySelector(\n          `.place-ships__board-space[data-x='${x + i}'][data-y='${y}']`\n        );\n        placeSpace.classList.add(\"place-ships__board-space--placed\");\n      }\n      return;\n    }\n    if (direction === \"vertical\" && y + ship.length - 1 < 10) {\n      for (let i = 0; i < ship.length; i++) {\n        placeSpace = document.querySelector(\n          `.place-ships__board-space[data-x='${x}'][data-y='${y + i}']`\n        );\n        placeSpace.classList.add(\"place-ships__board-space--placed\");\n      }\n    }\n  }\n\n  function disableButton(button) {\n    button.disabled = true;\n    button.classList.add(\"ship--disabled\");\n  }\n\n  function resetButton(button) {\n    button.disabled = false;\n    button.classList.remove(\"ship--disabled\");\n  }\n\n  function togglePlaceShipsToGame() {\n    placeShips.classList.toggle(\"place-ships--hidden\");\n    placeBoard.classList.toggle(\"place-ships__board--hidden\");\n    playerInfo.classList.toggle(\"player-info--hidden\");\n    gameArea.classList.toggle(\"game-area--hidden\");\n  }\n\n  function colorPlayerSpace(boat, x, y, direction) {\n    let playerSpace;\n\n    for (let i = 0; i < boat.length; i++) {\n      if (direction === \"horizontal\") {\n        playerSpace = document.querySelector(\n          `.player-info__player-space[data-x='${x + i}'][data-y='${y}']`\n        );\n        playerSpace.classList.add(\"player-info__player-space--filled\");\n      }\n      if (direction === \"vertical\") {\n        playerSpace = document.querySelector(\n          `.player-info__player-space[data-x='${x}'][data-y='${y + i}']`\n        );\n        playerSpace.classList.add(\"player-info__player-space--filled\");\n      }\n    }\n  }\n\n  function displayHit(x, y) {\n    const space = document.querySelector(\n      `.game-area__gameboard-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"game-area__gameboard-space--hit\");\n    message.innerText = \"A hit!\";\n  }\n\n  function displayMiss(x, y) {\n    const space = document.querySelector(\n      `.game-area__gameboard-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"game-area__gameboard-space--miss\");\n    message.innerText = \"A miss!\";\n  }\n\n  function displayPlayerHit(x, y) {\n    const space = document.querySelector(\n      `.player-info__player-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"player-info__player-space--hit\");\n    message.innerText = \"You're hit!\";\n  }\n\n  function displayPlayerMiss(x, y) {\n    const space = document.querySelector(\n      `.player-info__player-space[data-x='${x}'][data-y='${y}']`\n    );\n    space.classList.add(\"player-info__player-space--miss\");\n    message.innerText = \"Opponnent missed!\";\n  }\n\n  function displaySunkShip(coordinates) {\n    coordinates.forEach((coord) => {\n      const space = document.querySelector(\n        `.game-area__gameboard-space[data-x='${coord.x}'][data-y='${coord.y}']`\n      );\n      space.innerText = \"☓\";\n    });\n  }\n\n  function displayWinner(winner) {\n    if (winner === \"player\") {\n      message.innerText = \"You won!\";\n    } else {\n      message.innerText = \"Computer defeated you!\";\n    }\n\n    playAgain.classList.add(\"message-area__button--visible\");\n  }\n\n  function clearMessage() {\n    message.innerText = \"\";\n    playAgain.classList.remove(\"message-area__button--visible\");\n  }\n\n  function clearBoards() {\n    for (let i = 0; i < 100; i++) {\n      gameBoard.children[i].classList.remove(\n        \"game-area__gameboard-space--hit\",\n        \"game-area__gameboard-space--miss\"\n      );\n      gameBoard.children[i].innerText = \"\";\n      playerBoard.children[i].classList.remove(\n        \"player-info__player-space--filled\",\n        \"player-info__player-space--hit\",\n        \"player-info__player-space--miss\"\n      );\n      placeBoard.children[i].classList.remove(\n        \"place-ships__board-space--placed\"\n      );\n    }\n  }\n\n  displayPlaceShipsBoard();\n  displayPlayerBoard();\n  displayGameBoard();\n\n  return {\n    resetButton,\n    togglePlaceShipsToGame,\n    disableButton,\n    savePlayerHover,\n    clearFilledSpaces,\n    displayHover,\n    resetShipButtons,\n    addDeactivatedClass,\n    addActivatedClass,\n    colorPlayerSpace,\n    displayHit,\n    displayMiss,\n    displayPlayerHit,\n    displayPlayerMiss,\n    displayWinner,\n    displaySunkShip,\n    clearMessage,\n    clearBoards,\n  };\n})();\n\nmodule.exports = DOM;\n","const Gameboard = () => {\n  const board = [];\n  for (let i = 0; i < 10; i++) {\n    board[i] = [];\n  }\n\n  const ships = [];\n\n  const placeShip = (ship, x, y, direction) => {\n    // I CHANGED THIS\n    const shipLength = ship.length;\n    if (direction === \"horizontal\") {\n      if (x + shipLength - 1 > 9) {\n        return false;\n      }\n      for (let i = 0; i < shipLength; i++) {\n        if (board[x + i][y]) {\n          return false;\n        }\n      }\n      for (let i = 0; i < shipLength; i++) {\n        board[x + i][y] = ship;\n      }\n    }\n\n    if (direction === \"vertical\") {\n      if (y + shipLength - 1 > 9) {\n        return false;\n      }\n      for (let i = 0; i < shipLength; i++) {\n        if (board[x][y + i]) {\n          return false;\n        }\n      }\n      for (let i = 0; i < shipLength; i++) {\n        board[x][y + i] = ship;\n      }\n    }\n    ships.push(ship);\n    return true;\n  };\n\n  const placeShipsRandomly = (ships) => {\n    let result;\n    let x;\n    let y;\n    let direction;\n    ships.forEach((ship) => {\n      do {\n        x = randomInt();\n        y = randomInt();\n        direction = randomInt() <= 4 ? \"horizontal\" : \"vertical\";\n        result = placeShip(ship, x, y, direction);\n      } while (result === false);\n    });\n  };\n\n  const randomInt = () => {\n    return Math.floor(\n      Math.random() * (Math.floor(9) - Math.ceil(0) + 1) + Math.ceil(0)\n    );\n  };\n\n  const recieveAttack = (x, y) => {\n    if (board[x][y]) {\n      board[x][y].hit();\n      if (board[x][y].isSunk()) {\n        return board[x][y];\n      }\n      return \"hit\";\n    }\n    if (!board[x][y]) {\n      board[x][y] = \"miss\";\n      return \"miss\";\n    }\n  };\n\n  const allSunk = () => {\n    return ships.every((ship) => ship.isSunk() === true);\n  };\n\n  return { placeShip, placeShipsRandomly, recieveAttack, allSunk, board };\n};\n\nmodule.exports = Gameboard;\n","const Gameboard = require(\"./Gameboard.js\");\nconst Ship = require(\"./Ship.js\");\n\nconst Player = () => {\n  const playerBoard = Gameboard();\n\n  const patrolBoat = Ship(2, \"Patrol Boat\");\n  const submarine = Ship(3, \"Submarine\");\n  const destroyer = Ship(3, \"Destroyer\");\n  const battleship = Ship(4, \"Battleship\");\n  const carrier = Ship(5, \"Carrier\");\n\n  const moves = [];\n  const turnResults = [];\n\n  let foundHit;\n  let direction;\n  let directionConfirmed;\n\n  const attackBoard = (enemyBoard, x, y) => {\n    const result = enemyBoard.recieveAttack(x, y);\n    return result;\n  };\n\n  const randomCoords = () => {\n    let X;\n    let Y;\n    do {\n      X = randomInt();\n      Y = randomInt();\n    } while (moves.some((move) => move.x === X && move.y === Y));\n    moves.push({ x: X, y: Y });\n    return { x: X, y: Y };\n  };\n\n  const trySquareToLeft = (ofThisSquare) => {\n    moves.push({ x: ofThisSquare.x - 1, y: ofThisSquare.y });\n    return { x: ofThisSquare.x - 1, y: ofThisSquare.y };\n  };\n\n  const trySquareToBottom = (ofThisSquare) => {\n    moves.push({ x: ofThisSquare.x, y: ofThisSquare.y + 1 });\n    return { x: ofThisSquare.x, y: ofThisSquare.y + 1 };\n  };\n\n  const trySquareToTop = (ofThisSquare) => {\n    moves.push({ x: ofThisSquare.x, y: ofThisSquare.y - 1 });\n    return { x: ofThisSquare.x, y: ofThisSquare.y - 1 };\n  };\n\n  const trySquareToRight = (ofThisSquare) => {\n    moves.push({ x: ofThisSquare.x + 1, y: ofThisSquare.y });\n    return { x: ofThisSquare.x + 1, y: ofThisSquare.y };\n  };\n\n  const trySquaresAroundHit = (hit) => {\n    if (\n      hit.x + 1 < 10 &&\n      !moves.some((move) => move.x === hit.x + 1 && move.y === hit.y)\n    ) {\n      direction = \"right\";\n      return trySquareToRight(hit);\n    }\n    if (\n      hit.y + 1 < 10 &&\n      !moves.some((move) => move.x === hit.x && move.y === hit.y + 1)\n    ) {\n      direction = \"down\";\n      return trySquareToBottom(hit);\n    }\n    if (\n      hit.x - 1 >= 0 &&\n      !moves.some((move) => move.x === hit.x - 1 && move.y === hit.y)\n    ) {\n      direction = \"left\";\n      return trySquareToLeft(hit);\n    }\n    if (\n      hit.y - 1 >= 0 &&\n      !moves.some((move) => move.x === hit.x && move.y === hit.y - 1)\n    ) {\n      direction = \"up\";\n      return trySquareToTop(hit);\n    }\n\n    return randomCoords();\n  };\n\n  const generateCoordinates = () => {\n    let lastTurn = turnResults[turnResults.length - 1];\n    let lastMove = moves[moves.length - 1];\n\n    if (lastTurn instanceof Object) {\n      // reset variables once ship is finally sank\n      foundHit = null;\n      direction = null;\n      directionConfirmed = false;\n      return randomCoords();\n    }\n\n    if (lastTurn === \"hit\" && !foundHit) {\n      foundHit = lastMove; // store coords whenever ship is first hit\n      // ship was just found, so try to find out which direction it is oriented\n      return trySquaresAroundHit(foundHit);\n    }\n\n    if (lastTurn === \"hit\" && direction) {\n      // we found a hit, and we found the direction\n      directionConfirmed = true;\n      // there were two hits in a row\n      // keep trying in that direction\n      if (\n        direction === \"right\" &&\n        lastMove.x + 1 < 10 &&\n        !moves.some(\n          (move) => move.x === lastMove.x + 1 && move.y === lastMove.y\n        )\n      ) {\n        return trySquareToRight(lastMove);\n      }\n      if (\n        direction === \"down\" &&\n        lastMove.y + 1 < 10 &&\n        !moves.some(\n          (move) => move.x === lastMove.x && move.y === lastMove.y + 1\n        )\n      ) {\n        return trySquareToBottom(lastMove);\n      }\n      if (\n        direction === \"left\" &&\n        lastMove.x - 1 >= 0 &&\n        !moves.some(\n          (move) => move.x === lastMove.x - 1 && move.y === lastMove.y\n        )\n      ) {\n        return trySquareToLeft(lastMove);\n      }\n      if (\n        direction === \"up\" &&\n        lastMove.y - 1 >= 0 &&\n        !moves.some(\n          (move) => move.x === lastMove.x && move.y === lastMove.y - 1\n        )\n      ) {\n        return trySquareToTop(lastMove);\n      }\n      return trySquaresAroundHit(foundHit);\n    }\n\n    if (lastTurn === \"miss\" && foundHit && !directionConfirmed) {\n      // we found a hit, but the direction we tried didn't work\n      // try new direction\n      return trySquaresAroundHit(foundHit);\n    }\n\n    if (lastTurn === \"miss\" && directionConfirmed) {\n      // try opposite direction starting from foundHit\n      if (\n        direction === \"right\" &&\n        foundHit.x - 1 >= 0 &&\n        !moves.some(\n          (move) => move.x === foundHit.x - 1 && move.y === foundHit.y\n        )\n      ) {\n        direction = \"left\";\n        return trySquareToLeft(foundHit);\n      }\n      if (\n        direction === \"down\" &&\n        foundHit.y - 1 >= 0 &&\n        !moves.some(\n          (move) => move.x === foundHit.x && move.y === foundHit.y - 1\n        )\n      ) {\n        direction = \"up\";\n        return trySquareToTop(foundHit);\n      }\n      if (\n        direction === \"left\" &&\n        foundHit.x + 1 < 10 &&\n        !moves.some(\n          (move) => move.x === foundHit.x + 1 && move.y === foundHit.y\n        )\n      ) {\n        direction = \"right\";\n        return trySquareToRight(foundHit);\n      }\n      if (\n        direction === \"up\" &&\n        foundHit.y + 1 < 10 &&\n        !moves.some(\n          (move) => move.x === foundHit.x && move.y === foundHit.y + 1\n        )\n      ) {\n        direciton = \"down\";\n        return trySquareToBottom(foundHit);\n      }\n    }\n\n    return randomCoords();\n  };\n\n  const randomInt = () => {\n    return Math.floor(\n      Math.random() * (Math.floor(9) - Math.ceil(0) + 1) + Math.ceil(0)\n    );\n  };\n\n  return {\n    playerBoard,\n    patrolBoat,\n    submarine,\n    destroyer,\n    battleship,\n    carrier,\n    attackBoard,\n    generateCoordinates,\n    turnResults,\n  };\n};\n\nmodule.exports = Player;\n","const Ship = (length, name) => {\n  let health = length;\n\n  const hit = () => {\n    if (!isSunk()) {\n      health--;\n      return true;\n    }\n    return false;\n  };\n\n  const isSunk = () => {\n    if (health === 0) {\n      return true;\n    }\n    return false;\n  };\n  return { length, name, hit, isSunk };\n};\nmodule.exports = Ship;\n\n// hit returns true or false (false if already hit)\n// isSunk returns true or false;\n","const Player = require(\"./Player.js\");\nconst DOM = require(\"./DOM.js\");\nconst { displayHover } = require(\"./DOM.js\");\n\nconst app = (() => {\n  // DOM Capture\n  const shipButtons = document.querySelectorAll(\".ship\");\n  const directionButton = document.querySelector(\".direction-button-checkbox\");\n  const placeShipSpaces = document.querySelectorAll(\n    \".place-ships__board-space\"\n  );\n  const enemySpaces = document.querySelectorAll(\".game-area__gameboard-space\");\n  const startButton = document.querySelector(\".place-ships__start-game\");\n\n  // Event Handlers\n  shipButtons.forEach((button) =>\n    button.addEventListener(\"click\", selectShipButton)\n  );\n\n  startButton.addEventListener(\"click\", startGame);\n\n  let player1;\n  let player1Ships;\n  let player2;\n  let AIShips;\n  let turn;\n  let shipsPlaced;\n\n  function initVariables() {\n    player1 = null;\n    player1 = Player();\n    window.player1 = player1;\n    player1Ships = {\n      patrol: player1.patrolBoat,\n      submarine: player1.submarine,\n      destroyer: player1.destroyer,\n      battleship: player1.battleship,\n      carrier: player1.carrier,\n    };\n    player2 = null;\n    player2 = Player();\n    window.player2 = player2;\n    AIShips = [\n      player2.patrolBoat,\n      player2.submarine,\n      player2.destroyer,\n      player2.battleship,\n      player2.carrier,\n    ];\n    turn = 1;\n    shipsPlaced = 0;\n  }\n\n  function startGame() {\n    if (shipsPlaced !== 5) {\n      return;\n    }\n    DOM.togglePlaceShipsToGame();\n    enemySpaces.forEach((space) => space.addEventListener(\"click\", attack));\n  }\n\n  function selectShipButton(e) {\n    const shipButtonArray = [...shipButtons];\n    const otherButtons = shipButtonArray.filter(\n      (button) => button !== e.target\n    );\n\n    const ship = player1[e.target.dataset.ship];\n\n    const savePlaceShip = (event) => {\n      const x = parseInt(event.target.dataset.x);\n      const y = parseInt(event.target.dataset.y);\n      const direction = getDirection();\n      let result = player1.playerBoard.placeShip(ship, x, y, direction);\n      if (result === true) {\n        DOM.colorPlayerSpace(ship, x, y, direction);\n        DOM.savePlayerHover(ship, x, y, direction);\n        DOM.resetShipButtons(shipButtons);\n        otherButtons.forEach((button) =>\n          button.addEventListener(\"click\", selectShipButton)\n        );\n        DOM.disableButton(e.target);\n        placeShipSpaces.forEach((space) => {\n          space.removeEventListener(\"click\", savePlaceShip);\n          space.removeEventListener(\"mouseover\", hoverEvent);\n        });\n        shipsPlaced++;\n      }\n    };\n\n    const hoverEvent = (e) => {\n      DOM.displayHover(\n        ship,\n        e.target.dataset.x,\n        e.target.dataset.y,\n        getDirection()\n      );\n    };\n\n    DOM.clearFilledSpaces();\n\n    if (e.target.classList.contains(\"ship--activated\")) {\n      DOM.resetShipButtons(shipButtons);\n      otherButtons.forEach((button) =>\n        button.addEventListener(\"click\", selectShipButton)\n      );\n      return;\n    }\n\n    otherButtons.forEach((button) =>\n      button.removeEventListener(\"click\", selectShipButton)\n    );\n    DOM.addActivatedClass(e.target);\n    DOM.addDeactivatedClass(otherButtons);\n    placeShipSpaces.forEach((space) => {\n      space.addEventListener(\"mouseover\", hoverEvent);\n      space.addEventListener(\"click\", savePlaceShip);\n    });\n  }\n\n  function getDirection() {\n    if (directionButton.checked === false) {\n      return \"horizontal\";\n    } else {\n      return \"vertical\";\n    }\n  }\n\n  function placeAIShips() {\n    player2.playerBoard.placeShipsRandomly(AIShips);\n  }\n\n  function attack(e) {\n    if (turn % 2 !== 1) {\n      return;\n    }\n\n    e.target.removeEventListener(\"click\", attack);\n\n    const xCoord = e.target.dataset.x;\n    const yCoord = e.target.dataset.y;\n    const result = player1.attackBoard(player2.playerBoard, xCoord, yCoord);\n    if (result instanceof Object) {\n      // returns ship object when ship sunk\n      DOM.displayHit(xCoord, yCoord);\n      const coords = [];\n      for (let i = 0; i < 10; i++) {\n        for (let j = 0; j < 10; j++) {\n          if (player2.playerBoard.board[i][j] === result) {\n            coords.push({ x: i, y: j });\n          }\n        }\n      }\n      DOM.displaySunkShip(coords);\n    }\n    if (result === \"hit\") {\n      DOM.displayHit(xCoord, yCoord);\n    }\n    if (result === \"miss\") {\n      DOM.displayMiss(xCoord, yCoord);\n    }\n    if (turn >= 33) {\n      if (player2.playerBoard.allSunk()) {\n        gameOver(\"player\"); // p1 wins\n        return;\n      }\n    }\n    turn++;\n\n    setTimeout(AIMove, 750);\n  }\n\n  function AIMove() {\n    const AICoords = player2.generateCoordinates();\n    const AIResult = player2.attackBoard(\n      player1.playerBoard,\n      AICoords.x,\n      AICoords.y\n    );\n    if (AIResult === \"hit\" || AIResult instanceof Object) {\n      DOM.displayPlayerHit(AICoords.x, AICoords.y);\n    }\n    if (AIResult === \"miss\") {\n      DOM.displayPlayerMiss(AICoords.x, AICoords.y);\n    }\n    player2.turnResults.push(AIResult);\n    if (turn >= 33) {\n      if (player1.playerBoard.allSunk()) {\n        gameOver(\"computer\"); // p2 wins\n        return;\n      }\n    }\n    turn++;\n  }\n\n  function gameOver(winner) {\n    DOM.displayWinner(winner);\n    enemySpaces.forEach((space) => space.removeEventListener(\"click\", attack));\n    document\n      .querySelector(\".message-area__button\")\n      .addEventListener(\"click\", resetGame);\n  }\n\n  function resetGame() {\n    DOM.clearMessage();\n    DOM.clearBoards();\n    DOM.togglePlaceShipsToGame();\n    shipButtons.forEach((button) => DOM.resetButton(button));\n    initVariables();\n    placeAIShips();\n  }\n\n  initVariables();\n  placeAIShips();\n})();\n\nmodule.exports = app;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/app.js\");\n",""],"names":[],"sourceRoot":""}